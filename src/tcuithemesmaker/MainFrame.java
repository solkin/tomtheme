/*
 * MainFrame.java
 *
 * Created on 19.03.2011, 15:02:23
 */
package tcuithemesmaker;

import com.tomclaw.inigear.INIGear;
import com.tomclaw.tcuilite.Screen;
import com.tomclaw.tcuilite.Theme;
import demo.MidletMain;
import java.awt.Color;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Field;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.microedition.lcdui.Canvas;
import javax.microedition.lcdui.Display;
import javax.microedition.lcdui.Displayable;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author solkin
 */
public class MainFrame extends javax.swing.JFrame {

  public static MainFrame mainFrame;
  public static Color[] colorBuffer;
  /**
   * Theme info
   */
  public static int version = 3;
  public static String title = "Default";
  public static String author = "TomClaw Software";

  /** Creates new form MainFrame */
  public MainFrame() {
    initComponents();
    loadTable();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings( "unchecked" )
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new MidletPanel();
    jSeparator1 = new javax.swing.JSeparator();
    jToolBar1 = new javax.swing.JToolBar();
    jButton3 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jToolBar2 = new javax.swing.JToolBar();
    jButton7 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    jToolBar3 = new javax.swing.JToolBar();
    jButton9 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton10 = new javax.swing.JButton();
    jToolBar4 = new javax.swing.JToolBar();
    jButton1 = new javax.swing.JButton();
    jButton11 = new javax.swing.JButton();
    jButton12 = new javax.swing.JButton();
    jButton18 = new javax.swing.JButton();
    jSeparator2 = new javax.swing.JToolBar.Separator();
    jButton13 = new javax.swing.JButton();
    jButton14 = new javax.swing.JButton();
    jButton15 = new javax.swing.JButton();
    jSeparator3 = new javax.swing.JToolBar.Separator();
    jButton16 = new javax.swing.JButton();
    jButton17 = new javax.swing.JButton();
    jSeparator4 = new javax.swing.JToolBar.Separator();
    jButton19 = new javax.swing.JButton();
    jTabbedPane1 = new javax.swing.JTabbedPane();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("TomClaw TomTheme");
    addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        formKeyPressed(evt);
      }
    });

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));
    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
    jPanel1.setPreferredSize(new java.awt.Dimension(240, 320));
    jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jPanel1MousePressed(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        jPanel1MouseReleased(evt);
      }
    });
    jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        jPanel1MouseDragged(evt);
      }
    });
    jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jPanel1KeyPressed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 238, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 318, Short.MAX_VALUE)
    );

    jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

    jToolBar1.setFloatable(false);
    jToolBar1.setRollover(true);

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_left.png"))); // NOI18N
    jButton3.setEnabled(false);
    jButton3.setFocusable(false);
    jButton3.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });
    jToolBar1.add(jButton3);

    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_fire.png"))); // NOI18N
    jButton6.setEnabled(false);
    jButton6.setFocusable(false);
    jButton6.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jButton6MousePressed(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        jButton6MouseReleased(evt);
      }
    });
    jButton6.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton6ActionPerformed(evt);
      }
    });
    jToolBar1.add(jButton6);

    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_right.png"))); // NOI18N
    jButton4.setEnabled(false);
    jButton4.setFocusable(false);
    jButton4.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });
    jToolBar1.add(jButton4);

    jToolBar2.setFloatable(false);
    jToolBar2.setRollover(true);

    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_leftsoft.png"))); // NOI18N
    jButton7.setEnabled(false);
    jButton7.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton7ActionPerformed(evt);
      }
    });
    jToolBar2.add(jButton7);

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_up.png"))); // NOI18N
    jButton2.setEnabled(false);
    jButton2.setFocusable(false);
    jButton2.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });
    jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        jButton2KeyReleased(evt);
      }
    });
    jToolBar2.add(jButton2);

    jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_rightsoft.png"))); // NOI18N
    jButton8.setEnabled(false);
    jButton8.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton8ActionPerformed(evt);
      }
    });
    jToolBar2.add(jButton8);

    jToolBar3.setFloatable(false);
    jToolBar3.setRollover(true);

    jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_home.png"))); // NOI18N
    jButton9.setFocusable(false);
    jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton9.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton9ActionPerformed(evt);
      }
    });
    jToolBar3.add(jButton9);

    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_down.png"))); // NOI18N
    jButton5.setEnabled(false);
    jButton5.setFocusable(false);
    jButton5.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });
    jToolBar3.add(jButton5);

    jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_back.png"))); // NOI18N
    jButton10.setEnabled(false);
    jButton10.setFocusable(false);
    jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton10.setPreferredSize(new java.awt.Dimension(40, 40));
    jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton10.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton10ActionPerformed(evt);
      }
    });
    jToolBar3.add(jButton10);

    jToolBar4.setFloatable(false);
    jToolBar4.setRollover(true);

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_create.png"))); // NOI18N
    jButton1.setText("Создать");
    jButton1.setFocusable(false);
    jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton1);

    jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_open.png"))); // NOI18N
    jButton11.setText("Открыть");
    jButton11.setFocusable(false);
    jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton11.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton11ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton11);

    jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_save.png"))); // NOI18N
    jButton12.setText("Сохранить");
    jButton12.setFocusable(false);
    jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton12.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton12ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton12);

    jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_info.png"))); // NOI18N
    jButton18.setText("Инфо о теме");
    jButton18.setFocusable(false);
    jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton18.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton18ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton18);
    jToolBar4.add(jSeparator2);

    jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_refresh.png"))); // NOI18N
    jButton13.setText("Применить");
    jButton13.setFocusable(false);
    jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton13.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton13ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton13);

    jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/omg_rand_thm.png"))); // NOI18N
    jButton14.setText("Случайная тема");
    jButton14.setFocusable(false);
    jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton14.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton14ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton14);

    jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/omg_rand_comp.png"))); // NOI18N
    jButton15.setText("Случайный компонент");
    jButton15.setFocusable(false);
    jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton15.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton15ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton15);
    jToolBar4.add(jSeparator3);

    jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_copy.png"))); // NOI18N
    jButton16.setText("Копировать");
    jButton16.setFocusable(false);
    jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton16.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton16ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton16);

    jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_paste.png"))); // NOI18N
    jButton17.setText("Вставить");
    jButton17.setFocusable(false);
    jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton17.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton17.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton17ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton17);
    jToolBar4.add(jSeparator4);

    jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcuithemesmaker/icons/img_shot.png"))); // NOI18N
    jButton19.setText("Скриншот");
    jButton19.setFocusable(false);
    jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jButton19.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jButton19.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton19ActionPerformed(evt);
      }
    });
    jToolBar4.add(jButton19);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addGap(56, 56, 56)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
              .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addGap(10, 10, 10)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
      .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, 1054, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
          .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
      Display.pointerPressed( evt.getX(), evt.getY() );
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
      Display.pointerReleased( evt.getX(), evt.getY() );
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
      Display.pointerDragged( evt.getX(), evt.getY() );
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      Display.keyPressed( Canvas.UP );
      Display.keyReleased( Canvas.UP );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
    }//GEN-LAST:event_jPanel1KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    }//GEN-LAST:event_formKeyPressed

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased
    }//GEN-LAST:event_jButton2KeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      Display.keyPressed( Canvas.FIRE );
      Display.keyReleased( Canvas.FIRE );
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MousePressed
    }//GEN-LAST:event_jButton6MousePressed

    private void jButton6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseReleased
    }//GEN-LAST:event_jButton6MouseReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      Display.keyPressed( Canvas.DOWN );
      Display.keyReleased( Canvas.DOWN );
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      Display.keyPressed( Canvas.LEFT );
      Display.keyReleased( Canvas.LEFT );
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      Display.keyPressed( Canvas.RIGHT );
      Display.keyReleased( Canvas.RIGHT );
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      Display.keyPressed( Screen.KEY_CODE_LEFT_MENU );
      Display.keyReleased( Screen.KEY_CODE_LEFT_MENU );
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
      Display.keyPressed( Screen.KEY_CODE_RIGHT_MENU );
      Display.keyReleased( Screen.KEY_CODE_RIGHT_MENU );
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
      // Display.graphics = new Graphics( jPanel1.getGraphics(), 0, 0 );
      // ((MidletPanel)jPanel1).display = Display.display;
      MidletMain midlet = new MidletMain();
      //try {
      midlet.startApp();
      //} catch (MIDletStateChangeException ex) {
      //    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
      //}

      Displayable.width = (int) jPanel1.getPreferredSize().getWidth();
      Displayable.height = (int) jPanel1.getPreferredSize().getHeight();
      // midlet.mainFrame.paint(new Graphics(jPanel1.getGraphics(),0,0));
      Display.midletPanel = (MidletPanel) jPanel1;
      Display.getDisplay( midlet ).getCurrent().callRepaint();

      /** Enabling keys **/
      jButton2.setEnabled( true );
      jButton3.setEnabled( true );
      jButton4.setEnabled( true );
      jButton5.setEnabled( true );
      jButton6.setEnabled( true );
      jButton7.setEnabled( true );
      jButton8.setEnabled( true );
      jButton10.setEnabled( true );

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
      Display.keyPressed( Screen.KEY_CODE_BACK_BUTTON );
      Display.keyReleased( Screen.KEY_CODE_BACK_BUTTON );
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
      ( new FileChooserDialog( this, true, FileChooserDialog.MODE_OPEN, null ) ).setVisible( true );
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
      applyChanges();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
      ( new FileChooserDialog( this, true, FileChooserDialog.MODE_SAVE, null ) ).setVisible( true );
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      loadTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
      Random random = new Random();
      int red = 128, green = 128, blue = 128;
      int seed = 20;
      int tabCount = jTabbedPane1.getTabCount();
      for ( int c = 0; c < tabCount; c++ ) {
        DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getComponentAt( c ) ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
        for ( int i = 0; i < model.getRowCount(); i++ ) {
          red = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + red;
          green = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + green;
          blue = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + blue;

          if ( red > 255 ) {
            red = 255;
          }
          if ( green > 255 ) {
            green = 255;
          }
          if ( blue > 255 ) {
            blue = 255;
          }
          if ( red < 0 ) {
            red = 0;
          }
          if ( green < 0 ) {
            green = 0;
          }
          if ( blue < 0 ) {
            blue = 0;
          }
          System.out.println( red + ", " + green + ", " + blue );
          model.setValueAt( new Color( red, green, blue ), i, 1 );
        }
      }
      applyChanges();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
      Random random = new Random();
      int red = 128, green = 128, blue = 128;
      int seed = 20;
      DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getSelectedComponent() ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
      for ( int i = 0; i < model.getRowCount(); i++ ) {
        red = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + red;
        green = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + green;
        blue = ( random.nextBoolean() ? 1 : -1 ) * random.nextInt( seed ) + blue;
        if ( red > 255 ) {
          red = 255;
        }
        if ( green > 255 ) {
          green = 255;
        }
        if ( blue > 255 ) {
          blue = 255;
        }
        if ( red < 0 ) {
          red = 0;
        }
        if ( green < 0 ) {
          green = 0;
        }
        if ( blue < 0 ) {
          blue = 0;
        }
        model.setValueAt( new Color( red, green, blue ), i, 1 );
      }
      applyChanges();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
      DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getSelectedComponent() ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
      JTable jTable = ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getSelectedComponent() ).getComponent( 0 ) ).getComponent( 0 ) );
      colorBuffer = new java.awt.Color[ jTable.getSelectedRowCount() ];
      for ( int c = 0; c < jTable.getSelectedRowCount(); c++ ) {
        colorBuffer[c] = (java.awt.Color) model.getValueAt( jTable.getSelectedRow() + c, 1 );
      }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
      JTable jTable = ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getSelectedComponent() ).getComponent( 0 ) ).getComponent( 0 ) );
      for ( int c = 0; c < colorBuffer.length; c++ ) {
        setColorTo( jTable.getSelectedRow() + c, colorBuffer[c] );
      }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton18ActionPerformed
    {//GEN-HEADEREND:event_jButton18ActionPerformed
      ThemeInfo themeInfo = new ThemeInfo( this, true );
      themeInfo.setVisible( true );
    }//GEN-LAST:event_jButton18ActionPerformed

  private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
    ( new FileChooserDialog( this, true, FileChooserDialog.MODE_SCRN, null ) ).setVisible( true );
  }//GEN-LAST:event_jButton19ActionPerformed

  public void makeScreenShot( String filePath ) {
    try {
      ImageIO.write( ( (MidletPanel) jPanel1 ).image, "PNG", new File( filePath ) );
    } catch ( IOException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    }
  }

  public void applyChanges() {
    ByteArrayOutputStream baos = prepareTheme();
    ByteArrayInputStream bais = new java.io.ByteArrayInputStream( baos.toByteArray() );
    int[] data = Theme.loadTheme( new DataInputStream( bais ) );
    Theme.applyData( data );
    MidletMain.screen.repaint();
  }

  public final void loadTable() {
    DataInputStream dis = null;
    INIGear dataGear = new INIGear();
    try {
      java.io.File file = new java.io.File( "./theme.ini" );
      dis = new java.io.DataInputStream( new java.io.FileInputStream( file ) );
      byte[] aByte = new byte[ 1024 ];
      int read;
      ByteString bs = new ByteString();
      while ( ( read = dis.read( aByte ) ) != -1 ) {
        bs.append( aByte, 0, read );
      }
      dataGear.setStructure( bs.byteString );
      String[] groups = dataGear.getHeaders();

      System.out.println( groups.length );
      jTabbedPane1.removeAll();
      int count = 0;
      for ( int c = 0; c < groups.length; c++ ) {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();

        // Code of sub-components and layout - not shown here

        jTabbedPane1.addTab( groups[c], jScrollPane1 );

        final javax.swing.JTable jTable1 = new javax.swing.JTable();
        jTable1.setModel( new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{ "Описание", "Цвет" } ) {
          Class[] types = new Class[]{
            KeyValue.class, java.awt.Color.class, java.lang.String.class
          };

          @Override
          public Class getColumnClass( int columnIndex ) {
            return types[columnIndex];
          }
        } );
        jTable1.setDefaultRenderer( java.awt.Color.class, new ColorChooserTableRenderer() );
        jTable1.addMouseListener( new java.awt.event.MouseAdapter() {
          @Override
          public void mouseClicked( java.awt.event.MouseEvent evt ) {
            if ( jTable1.getSelectedColumn() == 0x01 ) {
              System.out.println( "Color: " + Long.toString( 0x1000000 + ( (java.awt.Color) jTable1.getModel().getValueAt( jTable1.getSelectedRow(), jTable1.getSelectedColumn() ) ).getRGB(), 10 ) );
              if ( evt.getClickCount() == 2 ) {
                ( new ColorChooserDialog( MainFrame.this, true, jTable1.getSelectedRow(), (java.awt.Color) jTable1.getModel().getValueAt( jTable1.getSelectedRow(), jTable1.getSelectedColumn() ) ) ).setVisible( true );
              }
            }
          }
        } );
        jScrollPane1.setViewportView( jTable1 );
        jTable1.setAutoResizeMode( JTable.AUTO_RESIZE_ALL_COLUMNS );
        // jTable1.getColumnModel().
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        String[] items = dataGear.getItems( groups[c] );
        for ( int i = 0; i < items.length; i++ ) {
          count++;
          Object[] objArr = new Object[]{
            new KeyValue( items[i], dataGear.getValue( items[i], groups[c] ) ),
            new Color( getColorOf( groups[c], items[i] ) ) };
          dtm.addRow( objArr );
        }
      }
      System.out.println( "Fields showed: " + count );
    } catch ( IOException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } catch ( Throwable ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } finally {
      try {
        dis.close();
      } catch ( IOException ex ) {
        Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
      }
    }
    // openTheme( "./tcuilite_def.tt3" );
  }

  public static int getColorOf( String className, String fieldName ) {
    try {
      Class clazz = Class.forName( "com.tomclaw.tcuilite." + className );
      int color = clazz.getField( fieldName ).getInt( null );
      return color;
    } catch ( Throwable ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    }
    return 0;
  }

  public void setColorTo( int row, java.awt.Color color ) {
    DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getSelectedComponent() ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
    model.setValueAt( color, row, 1 );
    String className = "com.tomclaw.tcuilite."
            + jTabbedPane1.getTitleAt( jTabbedPane1.getSelectedIndex() );
    KeyValue keyValue = (KeyValue) model.getValueAt( row, 0 );
    String fieldName = keyValue.key;
    int fieldValue = 0x1000000 + ( (Color) model.getValueAt( row, 1 ) ).getRGB();
    setStaticValue( className, fieldName, fieldValue );
    MidletMain.screen.repaint();
  }

  public void saveTheme( String fileName ) {
    try {
      ( new java.io.FileOutputStream( new File( fileName ) ) ).write( prepareTheme().toByteArray() );
    } catch ( IOException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    }
  }

  public ByteArrayOutputStream prepareTheme() {
    java.io.ByteArrayOutputStream baos1 = new java.io.ByteArrayOutputStream();
    java.io.ByteArrayOutputStream baos2 = new java.io.ByteArrayOutputStream();
    java.io.DataOutputStream dos1 = null;
    java.io.DataOutputStream dos2 = null;
    int count = 0;
    try {
      dos1 = new DataOutputStream( baos1 );
      dos2 = new DataOutputStream( baos2 );

      dos1.writeChar( 0xaf );
      dos1.writeChar( version );
      dos1.writeUTF( title );
      dos1.writeUTF( author );

      int intCount = 0;
      int tabCount = jTabbedPane1.getTabCount();
      int type;
      dos2.writeInt( tabCount );
      intCount++;
      System.out.println( "[w] count: " + tabCount );
      for ( int c = 0; c < tabCount; c++ ) {
        type = c + 1;
        dos2.writeInt( type );
        intCount++;
        DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getComponent( c ) ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
        dos2.writeInt( model.getRowCount() );
        intCount++;
        System.out.println( "# type: " + type + " size: " + model.getRowCount() );
        System.out.println( "[" + jTabbedPane1.getTitleAt( c ) + "]" );
        for ( int i = 0; i < model.getRowCount(); i++ ) {
          count++;
          // System.out.println( c + ", " + i );
          int colorRGB = 0;
          try {
            java.awt.Color color = (java.awt.Color) model.getValueAt( i, 1 );
            colorRGB = 0x1000000 + color.getRGB();
          } catch ( Throwable ex ) {
            Integer color = (Integer) model.getValueAt( i, 1 );
            colorRGB = color.intValue();
          }
          dos2.writeInt( colorRGB );
          System.out.println( ( (KeyValue) model.getValueAt( i, 0 ) ).key + "=" + colorRGB );
          intCount++;
        }
      }
      dos2.flush();
      dos1.writeInt( intCount );
      dos1.write( baos2.toByteArray() );
      dos1.flush();
      System.out.println( "Fields written: " + count );
      System.out.println( "Size: " + baos1.size() );
      return baos1;
    } catch ( IOException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } finally {
      try {
        dos1.close();
        dos2.close();
      } catch ( IOException ex ) {
        Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
      }
    }
    return null;
  }

  public void openTheme( String fileName ) {
    java.io.DataInputStream dis = null;
    int count = 0;
    try {
      dis = new DataInputStream( new java.io.FileInputStream( new File( fileName ) ) );
      int header = dis.readChar();
      System.out.println( "[r] header: " + header );
      int load_ver;
      if ( header == 0xaf ) {
        load_ver = dis.readChar();
        // load_ver = 3;
        title = dis.readUTF();
        author = dis.readUTF();
        if ( load_ver == 1 ) {
          int tabCount = jTabbedPane1.getTabCount();
          for ( int c = 0; c < tabCount; c++ ) {
            DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getComponent( c ) ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
            for ( int i = 0; i < model.getRowCount(); i++ ) {
              count++;
              // System.out.println(c + ", " + i);
              int colorRGB = dis.readInt();
              java.awt.Color color = new java.awt.Color( colorRGB );
              model.setValueAt( color, i, 1 );
            }
          }
        } else if ( load_ver == 2 ) {
          int intCount = dis.readInt();
          System.out.println( "[r] intCount: " + intCount );
          int tabCount = dis.readInt();
          System.out.println( "[r] tabCount: " + tabCount );
          for ( int c = 0; c < tabCount; c++ ) {
            int type = dis.readInt() - 1;
            System.out.println( "[r] type: " + type );
            DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getComponent( type ) ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
            int size = dis.readInt();
            System.out.println( "[r] type: " + type + " size: " + size );
            for ( int i = 0; i < size; i++ ) {
              count++;
              int colorRGB = dis.readInt();
              java.awt.Color color = new java.awt.Color( colorRGB );
              try {
                model.setValueAt( color, i, 1 );
              } catch ( Throwable ex ) {
              }
            }
          }
        } else if ( load_ver == 3 ) {
          int intCount = dis.readInt();
          System.out.println( "[r] intCount: " + intCount );
          int tabCount = dis.readInt();
          System.out.println( "[r] tabCount: " + tabCount );
          for ( int c = 0; c < tabCount; c++ ) {
            int type = dis.readInt() - 1;
            System.out.println( "[r] type: " + type );
            DefaultTableModel model = (DefaultTableModel) ( (JTable) ( (javax.swing.JViewport) ( (JScrollPane) jTabbedPane1.getComponent( type ) ).getComponent( 0 ) ).getComponent( 0 ) ).getModel();
            int size = dis.readInt();
            System.out.println( "[r] type: " + type + " size: " + size );
            for ( int i = 0; i < size; i++ ) {
              count++;
              int colorRGB = dis.readInt();
              java.awt.Color color = new java.awt.Color( colorRGB );
              model.setValueAt( color, i, 1 );
            }
          }
        }
        System.out.println( "Fields read: " + count );
      }
    } catch ( IOException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } finally {
      try {
        dis.close();
      } catch ( IOException ex ) {
        Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
      }
    }
  }

  public void setStaticValue( String className, String fieldName, Object value ) {
    try {
      Class clazz = Class.forName( className );
      Field field = clazz.getField( fieldName );
      field.set( null, value );
    } catch ( ClassNotFoundException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } catch ( NoSuchFieldException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } catch ( SecurityException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } catch ( IllegalArgumentException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    } catch ( IllegalAccessException ex ) {
      Logger.getLogger( MainFrame.class.getName() ).log( Level.SEVERE, null, ex );
    }
  }

  /**
   * @param args the command line arguments
   */
  public static void main( String args[] ) {
    java.awt.EventQueue.invokeLater( new Runnable() {
      @Override
      public void run() {
        /*try {
         UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName() );
         } catch ( Throwable ex ) {
         }
         try {
         UIManager.setLookAndFeel( "com.sun.java.swing.plaf.gtk.GTKLookAndFeel" );
         } catch ( Throwable ex ) {
         }*/
        try {
          // UIManager.setLookAndFeel( "com.lipstikLF.LipstikLookAndFeel" );
          UIManager.setLookAndFeel( "com.pagosoft.plaf.PgsLookAndFeel" );
        } catch ( Throwable ex ) {
        }
        mainFrame = new MainFrame();
        mainFrame.setVisible( true );
      }
    } );
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton10;
  private javax.swing.JButton jButton11;
  private javax.swing.JButton jButton12;
  private javax.swing.JButton jButton13;
  private javax.swing.JButton jButton14;
  private javax.swing.JButton jButton15;
  private javax.swing.JButton jButton16;
  private javax.swing.JButton jButton17;
  private javax.swing.JButton jButton18;
  private javax.swing.JButton jButton19;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton6;
  private javax.swing.JButton jButton7;
  private javax.swing.JButton jButton8;
  private javax.swing.JButton jButton9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JToolBar.Separator jSeparator2;
  private javax.swing.JToolBar.Separator jSeparator3;
  private javax.swing.JToolBar.Separator jSeparator4;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JToolBar jToolBar1;
  private javax.swing.JToolBar jToolBar2;
  private javax.swing.JToolBar jToolBar3;
  private javax.swing.JToolBar jToolBar4;
  // End of variables declaration//GEN-END:variables
}
